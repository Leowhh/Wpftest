//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wpftest.UserinfoService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserinfoService.UserinfoServiceSoap")]
    public interface UserinfoServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Register", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Register(string user_id, string user_pwd, string ip_addr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Register", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RegisterAsync(string user_id, string user_pwd, string ip_addr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Login(string user_id, string user_pwd, string ip_addr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LoginAsync(string user_id, string user_pwd, string ip_addr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateDate(string date, string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDate", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateDateAsync(string date, string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLastDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLastDate(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLastDate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetLastDateAsync(string user_id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UserinfoServiceSoapChannel : Wpftest.UserinfoService.UserinfoServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserinfoServiceSoapClient : System.ServiceModel.ClientBase<Wpftest.UserinfoService.UserinfoServiceSoap>, Wpftest.UserinfoService.UserinfoServiceSoap {
        
        public UserinfoServiceSoapClient() {
        }
        
        public UserinfoServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserinfoServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserinfoServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserinfoServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Register(string user_id, string user_pwd, string ip_addr) {
            return base.Channel.Register(user_id, user_pwd, ip_addr);
        }
        
        public System.Threading.Tasks.Task<string> RegisterAsync(string user_id, string user_pwd, string ip_addr) {
            return base.Channel.RegisterAsync(user_id, user_pwd, ip_addr);
        }
        
        public string Login(string user_id, string user_pwd, string ip_addr) {
            return base.Channel.Login(user_id, user_pwd, ip_addr);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string user_id, string user_pwd, string ip_addr) {
            return base.Channel.LoginAsync(user_id, user_pwd, ip_addr);
        }
        
        public void UpdateDate(string date, string user_id) {
            base.Channel.UpdateDate(date, user_id);
        }
        
        public System.Threading.Tasks.Task UpdateDateAsync(string date, string user_id) {
            return base.Channel.UpdateDateAsync(date, user_id);
        }
        
        public string GetLastDate(string user_id) {
            return base.Channel.GetLastDate(user_id);
        }
        
        public System.Threading.Tasks.Task<string> GetLastDateAsync(string user_id) {
            return base.Channel.GetLastDateAsync(user_id);
        }
    }
}
